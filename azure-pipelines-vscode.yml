
trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'  
    exclude:
    - 'src/language-service/*'
pr:
- dev
  
stages:
- stage: build
  displayName: 'Build'
  condition:  
  jobs:

  - job: BuildExtension
    pool:
      vmImage: 'ubuntu-latest'
          
    steps:

    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: 'Install Node.js' 

    - script: |
        npm install
        npm run compile
      displayName: 'npm install and compile'

    - script: |
        sudo npm install -g vsce
        vsce package
      displayName: Create VSIX
 
    - task: CopyFiles@2
      displayName: Stage VSIX for publishing
      inputs:
        contents: |-
          *.vsix
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishPipelineArtifact@1
      displayName: Publish VSIX as Artifact
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifact: vscode-home-assistant 

- stage: publish
  displayName: 'Publish'
  condition: succeeded('build')
  jobs:
  - deployment: publish
    displayName: Publish
    pool:
      vmImage: 'ubuntu-latest' 
    environment: Production
    strategy:
      runOnce:
        deploy:  
          steps:  

          - task: DownloadPipelineArtifact@2
            displayName: Download package from build artifacts
            inputs:
              artifactName: vscode-home-assistant 
              buildType: 'current'
              targetPath: '$(Pipeline.Workspace)'
            
          - task: GitHubRelease@0
            displayName: 'GitHub release (create)'
            inputs:
              gitHubConnection: GitHub
              assets: '$(Pipeline.Workspace)/**/*.vsix'
           
          - script: |
              sudo npm install -g vsce
            
              find . -name \*.vsix -type f -exec vsce publish --pat $MARKETPLACETOKEN --packagePath {} \;
            workingDirectory: '$(Pipeline.Workspace)'
            displayName: 'Publish Extension to Marketplace'
            env:
                MarketplaceToken: $(MarketplaceToken)