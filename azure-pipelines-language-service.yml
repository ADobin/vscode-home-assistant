
trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - 'src/language-service/*'  
    - 'azure-pipelines-language-service.yml'  
pr:
- dev
  
stages:
- stage: build
  displayName: 'Build'
  jobs: 
  - job: BuildExtension
    pool:
      vmImage: 'ubuntu-latest' 
    steps: 

    - script: |
        rm package-lock.json # this is weird is should not be needd
        npm install
        npm run compile
        mkdir package
        cd package
        npm pack ../
      workingDirectory: src/language-service
      displayName: 'NPM Install, Compile and Pack' 

    - task: PublishPipelineArtifact@1
      displayName: Publish package as Artifact
      inputs:
        targetPath: 'src/language-service/package' 
        artifact: language-service 

- stage: publish
  displayName: 'Publish to NPM'
  condition: succeeded('build')
  jobs:
  - deployment: publish_to_npm
    displayName: Publish to NPM
    pool:
      vmImage: 'ubuntu-latest' 
    environment: Production
    strategy:
      runOnce:
        deploy:  
          steps:  

          - task: DownloadPipelineArtifact@2
            displayName: Download package from build artifacts
            inputs:
              artifactName: language-service 
              buildType: 'current'
              targetPath: '$(Pipeline.Workspace)'
 
          - task: Npm@1
            displayName: Publish to NPMjs.org
            inputs:
              command: 'custom'
              customCommand: 'publish *.tgz'
              publishEndpoint: 'npmjs.org' 
              workingDir: '$(Pipeline.Workspace)'